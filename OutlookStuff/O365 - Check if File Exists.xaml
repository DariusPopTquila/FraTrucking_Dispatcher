<Activity mc:Ignorable="sap sap2010" x:Class="O365___Check_if_File_Exists" this:O365___Check_if_File_Exists.in_strO365TenantID="ddd66cce-ffe1-4029-967c-5e15ef73127f" this:O365___Check_if_File_Exists.in_StrSharedEmailAccount="Business.Systems@iagcargo.com" this:O365___Check_if_File_Exists.in_strO365Credentials="IAGC_MS365 (Mail API)" this:O365___Check_if_File_Exists.in_StrReportFileName="INs_Freight_report.xlsx" this:O365___Check_if_File_Exists.in_StrReportFolderName="INs" this:O365___Check_if_File_Exists.in_StrSharePointURL="https://baplc.sharepoint.com/sites/CargoAutomation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umaf="clr-namespace:UiPath.MicrosoftOffice365.Activities.Files;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strO365TenantID" Type="InArgument(x:String)" />
    <x:Property Name="in_StrSharedEmailAccount" Type="InArgument(x:String)" />
    <x:Property Name="in_strO365Credentials" Type="InArgument(x:String)" />
    <x:Property Name="in_StrReportFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrReportFolderName" Type="InArgument(x:String)" />
    <x:Property Name="out_BoolFileExists" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_StrSharePointURL" Type="InArgument(x:String)" />
    <x:Property Name="out_diReportFile" Type="OutArgument(mg:DriveItem)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1097.3333333333333,4090.666666666666</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>O365___Check_if_File_Exists_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="74">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="O365___Check_if_File_Exists" sap:VirtualizedContainerService.HintSize="612.6666666666666,4026" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strO365Client" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrO365Secret" />
      <Variable x:TypeArguments="x:String" Default="O365 - Check If File Exists" Name="strComponentName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Start" sap:VirtualizedContainerService.HintSize="550.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[String.Format(&quot;Started Component {0}&quot;, strComponentName)]" />
    <If Condition="[String.IsNullOrWhiteSpace(in_strO365Credentials)]" DisplayName="Incoming Argument Check - in_strO365Credentials" sap:VirtualizedContainerService.HintSize="550.6666666666666,420.6666666666667" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw In Argument AE" Exception="[New Exception(&quot;Incoming Argument in_strO364Credentials is Null or Not Populated!&quot;)]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[String.Format(&quot;Incoming Argument in_strO365Credentials (Ref: {0}) is Not Null and is Populated!&quot;, in_strO365Credentials )]" />
      </If.Else>
    </If>
    <If Condition="[String.IsNullOrWhiteSpace(in_strO365TenantID)]" DisplayName="Incoming Argument Check - in_strO365TenantID" sap:VirtualizedContainerService.HintSize="550.6666666666666,420.6666666666667" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw In Argument AE" Exception="[New Exception(&quot;Incoming Argument in_strO365TenantID is Null or Not Populated!&quot;)]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_2" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[String.Format(&quot;Incoming Argument in_strO365TenantID (Ref: {0}) is Not Null and is Populated!&quot;, in_strO365TenantID )]" />
      </If.Else>
    </If>
    <If Condition="[String.IsNullOrWhiteSpace(in_StrSharedEmailAccount)]" DisplayName="Incoming Argument Check - in_StrSharedEmailAccount" sap:VirtualizedContainerService.HintSize="550.6666666666666,420.6666666666667" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw In Argument AE" Exception="[New Exception(&quot;Incoming Argument in_StrSharedEmailAccount is Null or Not Populated!&quot;)]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_3" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[String.Format(&quot;Incoming Argument in_StrSharedEmailAccount: {0}) is Not Null and is Populated!&quot;, in_StrSharedEmailAccount )]" />
      </If.Else>
    </If>
    <If Condition="[String.IsNullOrWhiteSpace(in_StrReportFileName)]" DisplayName="Incoming Argument Check - in_StrReportFileName" sap:VirtualizedContainerService.HintSize="550.6666666666666,420.6666666666667" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw In Argument AE" Exception="[New Exception(&quot;Incoming Argument 'in_StrReportFileName' is Null or Not Populated!&quot;)]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_4" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[String.Format(&quot;Incoming Argument 'in_StrReportFileName': {0}) is Not Null and is Populated!&quot;, in_StrReportFileName )]" />
      </If.Else>
    </If>
    <If Condition="[String.IsNullOrWhiteSpace(in_StrReportFolderName)]" DisplayName="Incoming Argument Check - in_StrReportFolderName" sap:VirtualizedContainerService.HintSize="550.6666666666666,420.6666666666667" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw In Argument AE" Exception="[New Exception(&quot;Incoming Argument 'in_StrReportFolderName' is Null or Not Populated!&quot;)]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_5" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[String.Format(&quot;Incoming Argument 'in_StrReportFolderName': {0}) is Not Null and is Populated!&quot;, in_StrReportFileName )]" />
      </If.Else>
    </If>
    <Sequence DisplayName="Perform Sequence Actions" sap:VirtualizedContainerService.HintSize="550.6666666666666,1242.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch DisplayName="Try retrieving O365 Credential from Orchestrator" sap:VirtualizedContainerService.HintSize="488.6666666666667,494.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Sequence DisplayName="Get Credential from Orchestrator" sap:VirtualizedContainerService.HintSize="450,255.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_strO365Credentials]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="388,144.66666666666666" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[sstrO365Secret]" Username="[strO365Client]" />
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
              </ActivityAction.Argument>
              <ui:LogMessage DisplayName="Log message (Failed to load asset)" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;Failed to get credentials &quot;+Exception.Message+&quot;&gt;&lt;&quot;+Exception.Source]" />
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <uma:Office365ApplicationScope ApplicationSecret="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ContinueOnError="{x:Null}" OAuth2Username="{x:Null}" Password="{x:Null}" SecurePassword="{x:Null}" Timeout="{x:Null}" Username="{x:Null}" ApplicationId="[strO365Client]" AuthenticationType="ApplicationIdAndSecret" DisplayName="Microsoft Office 365 Scope" Environment="Global" sap:VirtualizedContainerService.HintSize="488.6666666666667,288" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_3" OAuthApplication="UiPath" SecureApplicationSecret="[sstrO365Secret]" Services="Mail" Tenant="[in_strO365TenantID]">
        <uma:Office365ApplicationScope.Body>
          <ActivityAction x:TypeArguments="mg:GraphServiceClient">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,200.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <umaf:FindFilesAndFolders DriveMetadata="{x:Null}" DriveName="{x:Null}" Results="{x:Null}" Account="[in_StrSharedEmailAccount]" DisplayName="Find Files And Folders" First="[out_diReportFile]" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="FindFilesAndFolders_4" Query="[in_StrReportFileName]" SiteUrl="[in_StrSharePointURL]" Subfolder="[in_StrReportFolderName]" />
            </Sequence>
          </ActivityAction>
        </uma:Office365ApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </uma:Office365ApplicationScope>
      <If Condition="[Not isNothing(out_diReportFile)]" DisplayName="If file was found" sap:VirtualizedContainerService.HintSize="488.6666666666667,269.3333333333333" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <Assign DisplayName="Set out_BoolFileExists to TRUE" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_BoolFileExists]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_9" />
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message - End" sap:VirtualizedContainerService.HintSize="550.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[String.Format(&quot;Ended Component {0}&quot;, strComponentName)]" />
  </Sequence>
</Activity>